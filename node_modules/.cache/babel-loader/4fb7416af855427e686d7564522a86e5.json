{"ast":null,"code":"var _jsxFileName = \"/Users/serg_vale/dev/mesto-react/src/components/Main.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport api from '../utils/api';\nimport Card from '../components/Card';\nimport edit from \"../images/edit.svg\";\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [cards, setCards] = React.useState([]);\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  React.useEffect(() => {\n    api.getInitialCards().then(items => {\n      setCards(items);\n    }).catch(err => Promise.reject(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile-columns\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__avatar\",\n          onClick: props.onEditAvatar,\n          style: {\n            backgroundImage: `url(${currentUser.avatar})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: edit,\n          alt: \"\\u041F\\u0440\\u0430\\u0432\\u043A\\u0430\",\n          className: \"profile__edit-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile__header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile__title\",\n              children: currentUser.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"profile__edit-button\",\n              \"aria-label\": \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\",\n              onClick: props.onEditProfile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile__subtitle\",\n            children: currentUser.about\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"profile-columns__add-button\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          card: card,\n          onCardClick: props.onCardClick,\n          onCardLike: handleCardLike\n        }, card._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"xialjJtjpodxuq9uLrhXqvEdCwA=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["/Users/serg_vale/dev/mesto-react/src/components/Main.js"],"names":["React","api","Card","CurrentUserContext","Main","props","currentUser","useContext","cards","setCards","useState","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","then","newCard","state","map","c","useEffect","getInitialCards","items","catch","err","Promise","reject","onEditAvatar","backgroundImage","avatar","edit","name","onEditProfile","about","onAddPlace","onCardClick"],"mappings":"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","sourcesContent":["import React from 'react'\nimport api from '../utils/api'\nimport Card from '../components/Card'\nimport edit from '../images/edit.svg'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nfunction Main(props) {\n  const currentUser= React.useContext(CurrentUserContext)\n  const [cards, setCards] = React.useState([])\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    });\n} \n\n  React.useEffect(() => {\n    api.getInitialCards()\n      .then((items) => {\n        setCards(items)\n    })\n      .catch(err => Promise.reject(err))\n}, [])\n\n  return (\n    <main>\n    <section className=\"profile-columns\">\n      <div className=\"profile\">\n        <div className=\"profile__avatar\" onClick={props.onEditAvatar} style={{ backgroundImage: `url(${currentUser.avatar})` }}></div>\n        <img src={edit} alt=\"Правка\" className=\"profile__edit-icon\"/>\n        <div className=\"profile__info\">\n          <div className=\"profile__header\">\n            <h1 className=\"profile__title\">{currentUser.name}</h1>\n            <button type=\"button\" className=\"profile__edit-button\" aria-label=\"Редактировать\" onClick={props.onEditProfile}></button>\n          </div>\n          <p className=\"profile__subtitle\">{currentUser.about}</p>\n        </div>\n      </div>\n      <button type=\"button\" className=\"profile-columns__add-button\" onClick={props.onAddPlace}></button>\n    </section>\n    <section className=\"elements\">\n      {cards.map((card) => {\n        return(\n          <Card card = {card} key = {card._id} onCardClick = {props.onCardClick} onCardLike = {handleCardLike} />\n      )})}\n    </section>\n  </main>\n  )\n}\nexport default Main"]},"metadata":{},"sourceType":"module"}