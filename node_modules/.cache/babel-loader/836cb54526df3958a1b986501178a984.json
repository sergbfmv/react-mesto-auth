{"ast":null,"code":"var _jsxFileName = \"/Users/serg_vale/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Main from '../components/Main';\nimport Footer from '../components/Footer';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api';\nimport EditProfilePopup from './EditProfilePopup';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport InfoTooltip from './InfoTooltip';\nimport regOk from \"../images/regOk.svg\";\nimport regNotOk from \"../images/regNotOk.svg\";\nimport * as auth from '../auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [loggedIn, setLoggedIn] = React.useState(false);\n\n  function handleLogin(e) {\n    e.preventDefault();\n    setLoggedIn({\n      loggedIn: true\n    });\n  }\n\n  function tokenCheck() {\n    // если у пользователя есть токен в localStorage, \n    // эта функция проверит, действующий он или нет\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      // проверим токен\n      auth.getContent(jwt).then(res => {\n        if (res) {\n          // авторизуем пользователя\n          this.setState({\n            loggedIn: true\n          }, () => {\n            // обернём App.js в withRouter\n            // так, что теперь есть доступ к этому методу\n            this.props.history.push('/');\n          });\n        }\n      });\n    }\n  }\n\n  function handleEditAvatarClick() {\n    setAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  function handleEditProfileClick() {\n    setProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  function handleAddPlaceClick() {\n    setPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser(info) {\n    api.editProfileInfo(info).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => Promise.reject(err));\n  }\n\n  function handleUpdateAvatar(data) {\n    api.changeAvatar(data.avatar).then(info => {\n      setCurrentUser(info);\n      closeAllPopups();\n    }).catch(err => Promise.reject(err));\n  }\n\n  function handleAddPlace(data) {\n    api.createCard(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => Promise.reject(err));\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => Promise.reject(err));\n  }\n\n  function handleCardDelete(card) {\n    api.removeCard(card._id).then(data => {\n      setCards(cards => cards.filter(item => item._id !== card._id));\n    }).catch(err => Promise.reject(err));\n  }\n\n  function closeAllPopups() {\n    setAvatarPopupOpen(false);\n    setProfilePopupOpen(false);\n    setPlacePopupOpen(false);\n    setSelectedCard({});\n  }\n\n  React.useEffect(() => {\n    api.getProfileInfo().then(data => {\n      setCurrentUser(data);\n    }).catch(err => Promise.reject(err));\n  }, []);\n  React.useEffect(() => {\n    api.getInitialCards().then(items => {\n      setCards(items);\n    }).catch(err => Promise.reject(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"reg\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-in\",\n            children: /*#__PURE__*/_jsxDEV(Login, {\n              handleLogin: handleLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/sign-up\",\n            children: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n            path: \"/\",\n            loggedIn: loggedIn,\n            component: Main,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onEditAvatar: handleEditAvatarClick,\n            onCardClick: handleCardClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 31\n            }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/sign-in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"1DUoCjhh2Ng4tsdOON7pXLWBQ54=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/serg_vale/dev/react-mesto-auth/src/components/App.js"],"names":["React","Route","Switch","Redirect","Header","Main","Footer","ImagePopup","api","EditProfilePopup","CurrentUserContext","EditAvatarPopup","AddPlacePopup","Login","Register","ProtectedRoute","InfoTooltip","auth","App","isEditProfilePopupOpen","setProfilePopupOpen","useState","isAddPlacePopupOpen","setPlacePopupOpen","isEditAvatarPopupOpen","setAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loggedIn","setLoggedIn","handleLogin","e","preventDefault","tokenCheck","jwt","localStorage","getItem","getContent","then","res","setState","props","history","push","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","card","handleUpdateUser","info","editProfileInfo","data","closeAllPopups","catch","err","Promise","reject","handleUpdateAvatar","changeAvatar","avatar","handleAddPlace","createCard","newCard","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","state","map","c","handleCardDelete","removeCard","filter","item","useEffect","getProfileInfo","getInitialCards","items"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport Header from '../components/Header'\nimport Main from '../components/Main'\nimport Footer from '../components/Footer'\nimport ImagePopup from './ImagePopup'\nimport api from '../utils/api'\nimport EditProfilePopup from './EditProfilePopup'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\nimport EditAvatarPopup from './EditAvatarPopup'\nimport AddPlacePopup from './AddPlacePopup'\nimport Login from './Login'\nimport Register from './Register'\nimport ProtectedRoute from './ProtectedRoute'\nimport InfoTooltip from './InfoTooltip'\nimport regOk from '../images/regOk.svg'\nimport regNotOk from '../images/regNotOk.svg'\nimport * as auth from '../auth';\n\nfunction App() {\n  const [isEditProfilePopupOpen, setProfilePopupOpen] = React.useState(false)\n  const [isAddPlacePopupOpen, setPlacePopupOpen] = React.useState(false)\n  const [isEditAvatarPopupOpen, setAvatarPopupOpen] = React.useState(false)\n  const [selectedCard, setSelectedCard] = React.useState({})\n  const [currentUser, setCurrentUser] = React.useState({})\n  const [cards, setCards] = React.useState([])\n  const [loggedIn, setLoggedIn] = React.useState(false)\n\n  function handleLogin(e) {\n    e.preventDefault();\n    setLoggedIn({\n      loggedIn: true\n    })\n  }\n\n  function tokenCheck () {\n    // если у пользователя есть токен в localStorage, \n    // эта функция проверит, действующий он или нет\n \n      const jwt = localStorage.getItem('jwt');\n      if (jwt){\n        // проверим токен\n        auth.getContent(jwt).then((res) => {\n          if (res){\n                    // авторизуем пользователя\n            this.setState({\n              loggedIn: true,\n            }, () => {\n                        // обернём App.js в withRouter\n                        // так, что теперь есть доступ к этому методу\n              this.props.history.push('/');\n            });\n          }\n        });\n      }\n    \n  }\n\n  function handleEditAvatarClick() {\n    setAvatarPopupOpen(!isEditAvatarPopupOpen)\n  }\n\n  function handleEditProfileClick() {\n    setProfilePopupOpen(!isEditProfilePopupOpen)\n  }\n\n  function handleAddPlaceClick() {\n    setPlacePopupOpen(!isAddPlacePopupOpen)\n  }\n\n  function handleCardClick(card) {\n    setSelectedCard(card)\n  }  \n\n  function handleUpdateUser(info) {\n    api.editProfileInfo(info)\n      .then((data) => {\n        setCurrentUser(data)\n        closeAllPopups()\n      })\n      .catch(err => Promise.reject(err))\n  }\n\n  function handleUpdateAvatar(data) {\n    api.changeAvatar(data.avatar)\n      .then((info) => {\n        setCurrentUser(info)\n        closeAllPopups()\n      })\n      .catch(err => Promise.reject(err))\n  }\n\n  function handleAddPlace(data) {\n    api.createCard(data)\n      .then((newCard) => {\n        setCards([newCard, ...cards])\n        closeAllPopups()\n      })\n      .catch(err => Promise.reject(err))\n  }\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    \n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n    })\n    .catch(err => Promise.reject(err))\n} \n\n  function handleCardDelete(card) {\n    api.removeCard(card._id)\n      .then((data) => {\n        setCards((cards) => cards.filter(item => item._id !== card._id))\n    })\n      .catch(err => Promise.reject(err))\n  }\n\n  function closeAllPopups() {\n    setAvatarPopupOpen(false)\n    setProfilePopupOpen(false)\n    setPlacePopupOpen(false)\n    setSelectedCard({})\n  }\n\n  React.useEffect(() => {\n      api.getProfileInfo()\n        .then((data) => {\n          setCurrentUser(data)\n        })\n        .catch(err => Promise.reject(err))\n    }, [])\n\n    React.useEffect(() => {\n      api.getInitialCards()\n        .then((items) => {\n          setCards(items)\n      })\n        .catch(err => Promise.reject(err))\n  }, [])\n\n  return (\n      <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page\">\n            <main className=\"reg\">\n              <Header />\n              <Switch>\n                <Route path=\"/sign-in\">\n                  <Login handleLogin = {handleLogin}/>\n                </Route>\n                <Route path=\"/sign-up\">\n                  <Register />\n                </Route>\n                <ProtectedRoute\n                  path=\"/\"\n                  loggedIn={loggedIn}\n                  component={Main}\n                  cards={cards} \n                  onCardLike={handleCardLike} \n                  onCardDelete={handleCardDelete} \n                  onEditProfile={handleEditProfileClick} \n                  onAddPlace={handleAddPlaceClick} \n                  onEditAvatar={handleEditAvatarClick} \n                  onCardClick={handleCardClick} \n                />\n                <Route>\n                  {loggedIn ? <Redirect to=\"/\" /> : <Redirect to=\"/sign-in\" />}\n                </Route>\n              </Switch>\n            </main>\n          <Footer />\n          <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\n          <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlace} />\n          <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\n          <ImagePopup card = {selectedCard} onClose = {closeAllPopups} />\n        </div>\n      </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}