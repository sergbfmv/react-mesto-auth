{"ast":null,"code":"class Api {\n  constructor(options) {\n    this.url = options.baseUrl;\n    this.headers = options.headers;\n  }\n\n  _checkStatus(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getProfileInfo() {\n    return fetch(this.url + '/users/me', {\n      headers: this.headers\n    }).then(res => this._checkStatus(res));\n  }\n\n  getInitialCards() {\n    return fetch(this.url + '/cards', {\n      headers: this.headers\n    }).then(res => this._checkStatus(res));\n  }\n\n  editProfileInfo(info) {\n    return fetch(this.url + '/users/me', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: info.name,\n        about: info.about\n      })\n    }).then(res => this._checkStatus(res));\n  }\n\n  createCard(card) {\n    return fetch(this.url + '/cards', {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    }).then(res => this._checkStatus(res));\n  }\n\n  removeCard(id) {\n    return fetch(`${this.url + '/cards'}/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(res => this._checkStatus(res));\n  }\n\n  addLike(id) {\n    return fetch(`${this.url + '/cards/likes'}/${id}`, {\n      method: 'PUT',\n      headers: this.headers\n    }).then(res => this._checkStatus(res));\n  }\n\n  deleteLike(id) {\n    return fetch(`${this.url + '/cards/likes'}/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(res => this._checkStatus(res));\n  }\n\n  changeAvatar(link) {\n    return fetch(this.url + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    }).then(res => this._checkStatus(res));\n  }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-21',\n  headers: {\n    authorization: '7ed380e6-68b3-4cb5-a4fb-d8eaa47229a6',\n    'Content-Type': 'application/json'\n  }\n});\nexport default api;","map":{"version":3,"sources":["/Users/serg_vale/dev/mesto-react/src/utils/Api.js"],"names":["Api","constructor","options","url","baseUrl","headers","_checkStatus","res","ok","json","Promise","reject","status","getProfileInfo","fetch","then","getInitialCards","editProfileInfo","info","method","body","JSON","stringify","name","about","createCard","card","link","removeCard","id","addLike","deleteLike","changeAvatar","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n  constructor(options) {\n    this.url = options.baseUrl\n    this.headers = options.headers\n  }\n\n  _checkStatus(res) {\n    if(res.ok) {\n      return res.json()\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`)\n  }\n\n  getProfileInfo() {\n    return fetch(this.url + '/users/me', {\n      headers: this.headers,\n    })\n    .then(res => \n      this._checkStatus(res)\n    )\n  }\n\n  getInitialCards() {\n    return fetch(this.url + '/cards', {\n      headers: this.headers,\n    })\n    .then(res => \n      this._checkStatus(res)\n    )\n  }\n\n  editProfileInfo(info) {\n    return fetch(this.url + '/users/me', {\n      method:'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: info.name,\n        about: info.about\n      })\n    })\n    .then(res => \n      this._checkStatus(res)\n    )\n  }\n\n  createCard(card) {\n    return fetch(this.url + '/cards', {\n      method:'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: card.name,\n        link: card.link\n      })\n    })\n    .then(res => \n      this._checkStatus(res)\n    )\n  }\n\n  removeCard(id) {\n    return fetch(`${this.url + '/cards'}/${id}`, {\n      method:'DELETE',\n      headers: this.headers,\n    })\n    .then(res => \n      this._checkStatus(res)\n    )\n  }\n\n  addLike(id) {\n    return fetch(`${this.url + '/cards/likes'}/${id}`, {\n      method: 'PUT',\n      headers: this.headers,\n    })\n    .then(res => \n      this._checkStatus(res)\n    )\n  }\n\n  deleteLike(id) {\n    return fetch(`${this.url + '/cards/likes'}/${id}`, {\n      method: 'DELETE',\n      headers: this.headers,\n    })\n    .then(res => \n      this._checkStatus(res)\n    )\n  }\n\n  changeAvatar(link) {\n    return fetch(this.url + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: link\n      })\n    })\n    .then(res => \n      this._checkStatus(res)\n    )\n  }\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-21',\n  headers: {\n    authorization: '7ed380e6-68b3-4cb5-a4fb-d8eaa47229a6',\n    'Content-Type': 'application/json'\n  }\n})\n\nexport default api"]},"metadata":{},"sourceType":"module"}