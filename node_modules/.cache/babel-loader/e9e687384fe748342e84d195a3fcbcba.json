{"ast":null,"code":"var _jsxFileName = \"/Users/serg_vale/dev/react-mesto-auth/src/components/InfoTooltip.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction InfoTooltip(props) {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: props.isOpen ? `popup popup_type_${props.name} popup_opened` : `popup popup_type_${props.name}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `popup__close-button popup__close-button_type_${props.name}`,\n        type: \"button\",\n        onClick: props.onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup__success\",\n        style: {\n          backgroundImage: `url(${props.image})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"popup__success-title\",\n        children: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n}\n\n_c = InfoTooltip;\nexport default InfoTooltip;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoTooltip\");","map":{"version":3,"sources":["/Users/serg_vale/dev/react-mesto-auth/src/components/InfoTooltip.js"],"names":["InfoTooltip","props","isOpen","name","onClose","backgroundImage","image","title"],"mappings":";;;AAAA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,sBACE;AAAS,IAAA,SAAS,EAAEA,KAAK,CAACC,MAAN,GAAgB,oBAAmBD,KAAK,CAACE,IAAK,eAA9C,GAAgE,oBAAmBF,KAAK,CAACE,IAAK,EAAlH;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAG,gDAA+CF,KAAK,CAACE,IAAK,EAA9E;AAAiF,QAAA,IAAI,EAAC,QAAtF;AAA+F,QAAA,OAAO,EAAEF,KAAK,CAACG;AAA9G;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAgC,QAAA,KAAK,EAAE;AAACC,UAAAA,eAAe,EAAG,OAAMJ,KAAK,CAACK,KAAM;AAArC;AAAvC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA,kBAAsCL,KAAK,CAACM;AAA5C;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;KAVQP,W;AAYT,eAAeA,WAAf","sourcesContent":["function InfoTooltip(props) {\n  return(\n    <section className={props.isOpen ? `popup popup_type_${props.name} popup_opened` : `popup popup_type_${props.name}`}>\n      <div className=\"popup__container\">\n        <button className={`popup__close-button popup__close-button_type_${props.name}`} type=\"button\" onClick={props.onClose}></button>\n        <div className='popup__success' style={{backgroundImage: `url(${props.image})`}}></div>\n        <h3 className=\"popup__success-title\">{props.title}</h3>\n      </div>\n    </section>\n  )\n}\n\nexport default InfoTooltip"]},"metadata":{},"sourceType":"module"}